# -*- coding: utf-8 -*-
"""Report: Global Economic Development from 1960-2018.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P5LK4lCGMdeydFyEEQYA5jRGCjVF9QNT
"""



from google.colab import drive
drive.mount('/content/drive')

"""# **Objective 1**

# Objective 1 Project Task


**Prepare & QA the DataYour first objective is to get the data ready for analysis by importing and joining the data, creating new columns, and performing basic profiling and QA**.


**1. Import the World Bank Excel file.**

**2. Use "GDP" and "GDP per Capita" to calculate population in millions and create a "Population (M)" column.**

**3. Perform basic profiling & QA on the data.**

**4. Filter the data to 2014 and join it with the HDI csv file on "Country Code".**
"""

import pandas as pd
import numpy as np

#1. Import the World Bank Excel file.
w_econ_rpt_df=pd.read_excel('/content/drive/MyDrive/Maven Analytics/5Project World Economic Report/WorldBank.xlsx')\
  .rename(columns={'Country Name':'Country'})
w_econ_rpt_df.head()

#2. Use "GDP" and "GDP per Capita" to calculate population in millions and create a "Population (M)" column.
w_econ_rpt_df['Population (M)']=(w_econ_rpt_df['GDP (USD)']/w_econ_rpt_df['GDP per capita (USD)'])/1000000

w_econ_rpt_df.info()

w_econ_rpt_df.describe()

#import hdi dataset

hdi=pd.read_csv('/content/drive/MyDrive/Maven Analytics/5Project World Economic Report/HDI.csv')

#
#select year 2014 from the world bank data and merge with hdi on iso3 selecting only iso3 and hdi_2014 oonly
wb_hdi_2014=w_econ_rpt_df.query("Year == 2014").merge(hdi[['iso3','hdi_2014']],left_on='Country Code',right_on='iso3',how='left')
wb_hdi_2014.head()

wb_hdi_2014.describe()

"""# **Objective 2**

**Prepare the data for visualizationYour second objective is to transform and shape the data into tables that will be used as the source for data visualizations.**

[**5. Create a "gdp_pivot" table with years as rows, regions as columns, sum of GDP as values.**](https://)

**6. Create "pop_pivot" table with years as rows, regions as columns, and sum of population as values.**

**7. Create "wb_hdi_by_region" table by calculating the average HDI for each region and sorting from highest average HDI to lowest.**
"""

#5. Create a "gdp_pivot" table with years as rows, regions as columns, sum of GDP as values.**
gdp_pivot=w_econ_rpt_df.pivot_table(index='Year',columns='Region',values='GDP (USD)',aggfunc='sum')
gdp_pivot.head()

#6. Create "pop_pivot" table with years as rows, regions as columns, and sum of population as values.
pop_pivot=w_econ_rpt_df.pivot_table(index='Year',columns='Region',values='Population (M)',aggfunc='sum')
pop_pivot.head()

#7. Create "wb_hdi_by_region" table by calculating the average HDI for each region and sorting from highest average HDI to lowest.
wb_hdi_by_region=wb_hdi_2014.pivot_table(index='Region',values='hdi_2014',aggfunc='mean').sort_values(by='hdi_2014',ascending=False)

#OR
wb_hdi_by_region=wb_hdi_2014.groupby('Region')['hdi_2014'].mean().sort_values(ascending=False)

wb_hdi_by_region.head()

"""# **Objective 3**

# Objective 3 Visualize the data.

**The third objective is to create 5 charts to visualize trends, relationships, and comparisons across regions.**

**8. Create a stacked area chart showing the growth of GDP over time, with each stack representing a geographic region.**

**9. Create a stacked area chart showing the growth of population over time, with each stack representing a geographic region.**

**10. Create a bubble chart with life expectancy for each country in the x-axis, GDP per capita in the y-axis (log scale), and population as the bubble size. Color the bubbles by region using the same colors for each as in the previous charts.**

**11. Create a bar chart to show average HDI by region (make sure the region colors match).**

**12. Create a scatterplot with power consumption in the x-axis and GDP per capita in the y-axis, then use HDI as a color scale for the dots (make sure to remove outliers like Iceland).**
"""

#sorting thegdp_pivot
gdp_pivot.iloc[-1].sort_values(ascending=False).index

#**8. Create a stacked area chart showing the growth of GDP over time, with each stack representing a geographic region.**
import matplotlib.pyplot as plt
import seaborn as sns

fig, ax=plt.subplots()

ax.stackplot(
    gdp_pivot.index,
    [gdp_pivot[region]/1_000_000_000_000 for region in gdp_pivot.iloc[-1].sort_values(ascending=False).index],
    labels=gdp_pivot.iloc[-1].sort_values(ascending=False).index
)
ax.legend(loc='upper left')
ax.set_xlabel('Year')
ax.set_ylabel('GDP (Trillions)')
ax.set_title('GDP Growth Over Time')



#9. Create a stacked area chart showing the growth of population over time, with each stack representing a geographic region.

fig, ax=plt.subplots()

ax.stackplot(
    pop_pivot.index,
    [pop_pivot[region]/1_000 for region in pop_pivot.iloc[-1].sort_values(ascending=False).index],
    labels=pop_pivot.iloc[-1].sort_values(ascending=False).index
)
ax.legend(loc='upper left')
ax.set_xlabel('Year')
ax.set_ylabel('Population (Billions)')
ax.set_title('Population Growth by Region')

#10. Create a bubble chart with life expectancy for each country in the x-axis, GDP per capita in the y-axis (log scale), and population as the bubble size. Color the bubbles by region using the same colors for each as in the previous charts.
import matplotlib.ticker
fig, ax=plt.subplots()
minsize=min(wb_hdi_2014['Population (M)'])
maxsize=max(wb_hdi_2014['Population (M)'])

sns.scatterplot(
    data=wb_hdi_2014,
    x= 'Life expectancy at birth (years)',
    y='GDP per capita (USD)',
    size='Population (M)',
    hue='Region').set(yscale='log', title='Life Expectancy Increases as Countires get richer')

ax.yaxis.set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)

#11. Create a bar chart to show average HDI by region (make sure the region colors match).
wb_hdi_by_region.plot(kind='bar',color=sns.color_palette('Set2'),title='HDI By Region,',ylabel='Human Development Index(HDI)')

#12. Create a scatterplot with power consumption in the x-axis and GDP per capita in the y-axis,
#then use HDI as a color scale for the dots (make sure to remove outliers like Iceland).

sns.scatterplot(
    data=wb_hdi_2014.query ("Country != 'Iceland'"),
    x='Electric power consumption (kWh per capita)',
    y='GDP per capita (USD)',
    hue='hdi_2014',
    palette='coolwarm_r'
).set(title='Electric Power Consumption vs GDP Per Capita')

"""# **Objective 4 Build a final report**

**The final objective is to structure your visualizations into a compelling report on the state of the global economy.**

**Assemble the 5 visualizations you have created into a single page (or figure).**

**Add an overall title and descriptive text to add context for the reader**
"""

import matplotlib.gridspec as gridspec
import matplotlib.pyplot as plt

fig = plt.figure(figsize=(10, 16))

gs = gridspec.GridSpec(nrows=12, ncols=6)

# Adjust subplot spacing
plt.subplots_adjust(hspace=0.5, wspace=0.3)

#hex color codes
stack1_list = ['#66C2A5', '#FC8D62', '#8DA0CB', '#E78AC3', '#A6D854', '#FFD92F', '#B3B3B3']
stack2_list = ['#66C2A5', '#A6D854', '#B3B3B3', '#FC8D62', '#E78AC3', '#8DA0CB', '#FFD92F']
bar_list    = ['#8DA0CB', '#FC8D62', '#E78AC3', '#FFD92F', '#66C2A5', '#A6D854', '#B3B3B3']
bubble_list = ['#A6D854', '#FC8D62', '#FFD92F', '#66C2A5', '#B3B3B3', '#E78AC3', '#8DA0CB']


# add title
fig.suptitle(
    "Report: Global Economic Development from 1960-2018",
    fontsize=16,
    fontweight="bold",
    x=0.65,
    y=0.93
)

ax1 = fig.add_subplot(gs[0:4, 0:3])

#**8. Create a stacked area chart showing the growth of GDP over time, with each stack representing a geographic region.**
ax1.stackplot(
    gdp_pivot.index,
    [gdp_pivot[region]/1_000_000_000_000 for region in gdp_pivot.iloc[-1].sort_values(ascending=False).index],
    labels=gdp_pivot.iloc[-1].sort_values(ascending=False).index,colors=stack1_list
)
#ax1.legend(loc='upper left')
ax1.set_xlabel('Year')
ax1.set_ylabel('GDP (Trillions)')
ax1.set_title('GDP Growth Over Time')


fig.text(.92, .66,
"""Economic expansion in the 20th and early
21st Centuries has been enormous and has
outpaced population growth. In 1960, Europe
and North America produced 75% of GDP on
20% of Population.

By 2018, East Asia had surpassed both
in economic output largely due to the
rise of Japan, South Korea and China.

In the coming decades, economists expect
South Asia and Sub-Saharan Africa to lead
the world in global growth""",
fontsize=10)

ax2 = fig.add_subplot(gs[0:4, 3:6])

ax2.stackplot(
    pop_pivot.index,
    [pop_pivot[region]/1_000 for region in pop_pivot.iloc[-1].sort_values(ascending=False).index],
    labels=pop_pivot.iloc[-1].sort_values(ascending=False).index,colors=stack2_list
)
ax2.legend(bbox_to_anchor=(1.75, 1), fontsize=8)
ax2.set_xlabel('Year')
ax2.set_ylabel('Population (Billions)')
ax2.set_title('Population Growth by Region')

ax3 = fig.add_subplot(gs[4:8, :])

minsize=min(wb_hdi_2014['Population (M)'])
maxsize=max(wb_hdi_2014['Population (M)'])

sns.scatterplot(
    data=wb_hdi_2014,
    x= 'Life expectancy at birth (years)',
    y='GDP per capita (USD)',
    size='Population (M)',palette=bubble_list,
    sizes=(minsize,maxsize),
    hue='Region').set(yscale='log', title='Life Expectancy Increases as Countires get richer')

ax3.yaxis.set_major_formatter(matplotlib.ticker.ScalarFormatter())
handles, labels = ax3.get_legend_handles_labels()
entries_to_skip = len(wb_hdi_2014["Region"].unique()) + 2
ax3.legend(handles[entries_to_skip:],
           labels[entries_to_skip:],
           bbox_to_anchor=(.5, .9),
           loc='upper center',
           borderaxespad=0.,
           fontsize=10,
           frameon=False,
           ncol=6)

fig.text(.92, .42,
"""
The wealthy nations of the world
enjoy high GDP per capita as well
as long life spans, but
make up a relatively small share
of the global population.

If growth can continue in the developing
world, humanity will be vastly wealthier,
healthier, and (hopefully) happier.
""",
fontsize=10)


ax4 = fig.add_subplot(gs[8:12, 0:3])

#11. Create a bar chart to show average HDI by region (make sure the region colors match).
wb_hdi_by_region.plot(kind='bar',color=bar_list,title='HDI By Region,',ylabel='Human Development Index(HDI)',ax=ax4)
fig.text(.92, .15,
"""
HDI, short for Human Development Index,
attempts to measure the overall standard
of living in countries. Life Expectancy,
GDP per Capita, and Educational attainment
are the factors that are considered.

Economic growth in the developing world
in the 21st century should help other regions
catch up to North America and Europe.

One factor not in HDI, but instrumental in
a country's development, is electricity consumption.
Electricity unlocks massive improvements in
productivity. Developing nations should continue
to invest in energy production to ensure growth.
""",
fontsize=10)


ax5 = fig.add_subplot(gs[8:12, 3:6])

sns.scatterplot(
    data=wb_hdi_2014.query ("Country != 'Iceland'"),
    x='Electric power consumption (kWh per capita)',
    y='GDP per capita (USD)',
    hue='hdi_2014',
    palette='coolwarm_r',ax=ax5
).set(title='Electric Power Consumption vs GDP Per Capita')

fig.subplots_adjust(wspace=4, hspace=4)